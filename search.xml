<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[记录超链接]]></title>
    <url>%2F2019%2F05%2F04%2F%E8%AE%B0%E5%BD%95%E8%B6%85%E9%93%BE%E6%8E%A5%2F</url>
    <content type="text"><![CDATA[一些技术相关的超链接很多超链接是使用浏览器的收藏夹收集的，但是考虑到收藏夹收集的很多都是不是技术相关的网页，而且阅读也很不方便，故整理成一篇博客，专门介绍收藏一些有价值的超链接。 12今日头条Go建千亿级微服务的实践https://36kr.com/p/5073181 12以今日头条为例，详述数据思维驱动产品设计的方法论https://36kr.com/p/5084663?from=related 未完待续…]]></content>
  </entry>
  <entry>
    <title><![CDATA[linux 内核参数调优]]></title>
    <url>%2F2019%2F05%2F04%2Flinux-%E5%86%85%E6%A0%B8%E5%8F%82%E6%95%B0%E8%B0%83%E4%BC%98%2F</url>
    <content type="text"><![CDATA[常用的参数：12345678910111213141516171819202122232425262728293031323334353637383940414243net.ipv4.tcp_syn_retries = 1net.ipv4.tcp_synack_retries = 1net.ipv4.tcp_keepalive_time = 600net.ipv4.tcp_keepalive_probes = 3net.ipv4.tcp_keepalive_intvl =15net.ipv4.tcp_retries2 = 5net.ipv4.tcp_fin_timeout = 2net.ipv4.tcp_max_tw_buckets = 36000net.ipv4.tcp_tw_recycle = 1net.ipv4.tcp_tw_reuse = 1net.ipv4.tcp_max_orphans = 32768net.ipv4.tcp_syncookies = 1net.ipv4.tcp_max_syn_backlog = 16384net.ipv4.tcp_wmem = 8192 131072 16777216net.ipv4.tcp_rmem = 32768 131072 16777216net.ipv4.tcp_mem = 786432 1048576 1572864net.ipv4.ip_local_port_range = 1024 65000net.ipv4.ip_conntrack_max = 1655360net.ipv4.netfilter.ip_conntrack_max=1655360net.ipv4.netfilter.ip_conntrack_tcp_timeout_established=180net.core.somaxconn = 16384net.core.netdev_max_backlog = 16384 其它相关linux内核参数调整文章： nginx做web服务器linux内核参数优化 http://blog.csdn.net/force_eagle/article/details/6725243 Linux内核参数优化 http://flandycheng.blog.51cto.com/855176/476769 优化linux的内核参数来提高服务器并发处理能力 http://www.ha97.com/4396.html 123网络相关参数简介-阿里云https://help.aliyun.com/knowledge_detail/41334.htmlhttps://yq.aliyun.com/articles/475509]]></content>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu 16.04 安装 minikube (--vm-driver=none)]]></title>
    <url>%2F2019%2F01%2F07%2FUbuntu-16-04-%E5%AE%89%E8%A3%85-minikube-vm-driver-none%2F</url>
    <content type="text"><![CDATA[注意 ： –vm-driver=none 选项来在本机运行 Kubernetes 组件，这时候需要本机安装了 Docker。在使用 0.27版本之前的 none 驱动时，在执行 minikube delete 命令时，会移除 /data 目录，请注意，问题说明；另外 none 驱动会运行一个不安全的API Server，会导致安全隐患，不建议在个人工作环境安装。 1背景： 需要快速搭建一套集群环境，来进行某些功能的验证，在安装了多次 minikube 之后，发现不管是centos还是ubuntu安装virtualbox时都要折腾一番，所以尝试了 --vm-driver=none 选项 minikube 基本可以在几分钟内搭建完成，记录过程，为后来人填坑。 安装 kubectl下载 kubectl 可执行文件 下载最新版 kubectl 1curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl 指定版本下载 kubectl 1curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.13.0/bin/linux/amd64/kubectl 如果上述操作需翻墙而你有没有梯子的话，可以下载我下载好的kubectl下载kubectl 增加可执行权限1chmod +x ./kubectl 把 kubectl 加入到/usr/local/bin/1sudo mv ./kubectl /usr/local/bin/kubectl 安装docker1apt-get install docker.io 安装minikube(使用阿里修改过的minikue,拉镜像不用翻墙，版本要是v0.25.2，尝试过高版本失败了)1curl -Lo minikube http://kubernetes.oss-cn-hangzhou.aliyuncs.com/minikube/releases/v0.25.2/minikube-linux-amd64 &amp;&amp; chmod +x minikube &amp;&amp; sudo cp minikube /usr/local/bin/ 启动 minikube1sudo minikube start --cpus=3 --memory=3500 --disk-size="100G" --vm-driver=none --registry-mirror=https://registry.docker-cn.com]]></content>
  </entry>
  <entry>
    <title><![CDATA[hexo的部署]]></title>
    <url>%2F2019%2F01%2F05%2Fhexo%20%E9%83%A8%E7%BD%B2%2F</url>
    <content type="text"><![CDATA[hexo 使用使用next主题gitment 配置busuanzi 配置，需要修改域名,一般只要在next的config中开启就好了百度统计配置使用可视化工具 http://localhost:4000/admin参考：https://www.cnblogs.com/fengxiongZz/p/7707219.htmlhttp://www.cnblogs.com/ioufev/articles/9886560.htmlhttps://sun_xy.gitee.io/blog/]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F01%2F05%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
